#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Kubernetes
set -e

echo "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Tasks9 Fraud Detection API –≤ Kubernetes..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É —Å –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞–º–∏
cd "$(dirname "$0")/manifests"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ kubectl
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ kubectl...${NC}"
kubectl version --client > /dev/null 2>&1
check_status "kubectl –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
echo -e "${BLUE}üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É...${NC}"
kubectl cluster-info > /dev/null 2>&1
check_status "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤
echo -e "${BLUE}üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤...${NC}"
kubectl apply -f namespace.yaml
check_status "Namespace —Å–æ–∑–¥–∞–Ω"

kubectl apply -f configmap.yaml
check_status "ConfigMap –ø—Ä–∏–º–µ–Ω–µ–Ω"

kubectl apply -f deployment.yaml
check_status "Deployment –ø—Ä–∏–º–µ–Ω–µ–Ω"

kubectl apply -f service.yaml
check_status "Service –ø—Ä–∏–º–µ–Ω–µ–Ω"

kubectl apply -f ingress.yaml
check_status "Ingress –ø—Ä–∏–º–µ–Ω–µ–Ω"

kubectl apply -f hpa.yaml
check_status "HPA –ø—Ä–∏–º–µ–Ω–µ–Ω"

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤
echo -e "${BLUE}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤ (–º–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç)...${NC}"
kubectl wait --for=condition=ready pod -l app=fraud-detection-api -n tasks9-mlops --timeout=300s
check_status "–ü–æ–¥—ã –≥–æ—Ç–æ–≤—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
echo -e "${BLUE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
kubectl get all -n tasks9-mlops

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo -e "${BLUE}üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
kubectl logs -l app=fraud-detection-api -n tasks9-mlops --tail=10

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç-—Ñ–æ—Ä–≤–∞—Ä–¥–∏–Ω–≥
echo -e "${BLUE}üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —á–µ—Ä–µ–∑ port-forward...${NC}"
kubectl port-forward svc/tasks9-fraud-detection-service 8000:8000 -n tasks9-mlops &
PORT_FORWARD_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ port-forward
sleep 5

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint
echo -e "${BLUE}üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /health endpoint...${NC}"
curl -s http://localhost:8000/health | jq . || curl -s http://localhost:8000/health
check_status "Health endpoint –æ—Ç–≤–µ—á–∞–µ—Ç"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ predict endpoint
echo -e "${BLUE}üîÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /predict endpoint...${NC}"
curl -s -X POST http://localhost:8000/predict \
  -H "Content-Type: application/json" \
  -d '{
    "amount": 100.50,
    "hour": 14,
    "day_of_week": 2,
    "user_age": 35,
    "account_balance": 1500.75
  }' | jq . || curl -s -X POST http://localhost:8000/predict \
  -H "Content-Type: application/json" \
  -d '{
    "amount": 100.50,
    "hour": 14,
    "day_of_week": 2,
    "user_age": 35,
    "account_balance": 1500.75
  }'
check_status "Predict endpoint –æ—Ç–≤–µ—á–∞–µ—Ç"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ port-forward
kill $PORT_FORWARD_PID 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HPA
echo -e "${BLUE}üìà –ü—Ä–æ–≤–µ—Ä–∫–∞ HPA —Å—Ç–∞—Ç—É—Å–∞...${NC}"
kubectl get hpa -n tasks9-mlops

echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${YELLOW}üìã –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
echo -e "   kubectl port-forward svc/tasks9-fraud-detection-service 8000:8000 -n tasks9-mlops"
echo -e "   curl http://localhost:8000/health"
echo -e "   curl http://localhost:8000/docs"
